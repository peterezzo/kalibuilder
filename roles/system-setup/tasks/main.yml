---
- name: set timezone to GMT
  timezone:
    name: GMT

- name: set hostname
  hostname:
    name: "{{ inventory_hostname }}"

- name: start ssh server at boot
  service:
    name: ssh
    enabled: yes
    state: started

- name: reset root login settings in sshd to default
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^PermitRootLogin'
    state: absent
    backup: yes
  notify:
    - restart ssh

- name: disable passwords for sshd
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: "^PasswordAuthentication"
    insertbefore: "PermitEmptyPasswords"
    line: PasswordAuthentication no
    backup: yes
  notify:
    - restart ssh

- name: enable 32-bit as a multiarch
  lineinfile:
    path: /var/lib/dpkg/arch
    line: i386

- name: add microsoft apt signing key
  apt_key:
    data: "{{ lookup('file', 'microsoft.asc') }}"
    state: present

- name: add microsoft repo for powershell
  apt_repository:
    repo: deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-debian-stretch-prod stretch main
    state: present
    update_cache: no

- name: add old kali 2018.2 repo for powershell
  apt_repository:
    repo: deb [trusted=yes] http://old.kali.org/kali 2018.2 main
    state: present
    update_cache: no

- name: add microsoft repo for vscode
  apt_repository:
    repo: deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main
    state: present
    update_cache: no

- name: update apt
  apt:
    update_cache: yes
    cache_valid_time: 86400

- name: install base system packages
  apt:
    name: "{{ pkgs }}"
    update_cache: yes
    state: present
  vars:
    pkgs:
      - aptitude
      - code
      - curl
      - dos2unix
      - ftp
      - gcc-multilib
      - git
      - jq
      - mtr
      - ncftp
      - openvpn
      - powershell
      - python
      - python-pip
      - python3
      - python3-pip
      - rsync
      - screen
      - smbclient
      - tcpdump
      - tmux
      - traceroute
      - unrar-free
      - unzip
      - vim
      - wget
      - wireshark

- name: remove common packages
  apt:
    name: "{{ remove_pkgs }}"
    state: absent
    purge: yes
    autoremove: yes
  vars:
    remove_pkgs:
      - popularity-contest

- name: install extra packages from customizations
  apt:
    name: "{{ extra_pkgs }}"
    update_cache: yes
    state: present

- name: call apt autoremove
  apt:
    autoremove: yes
